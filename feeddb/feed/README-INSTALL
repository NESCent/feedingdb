Installation guidelines for Feeding DB, as of 20110210 release. 

An effort was made to mention all relevant matters, but there are likely lurking omissions or worse. 

[We expect to upgrade Feeding DB to Django 1.3 after it becomes available in Feb 2011, 
and as part of that improve code layout and installation instructions.]


DEPENDENCIES 
============

Common dependencies: 

 - Relational database. (We used Postgres, both on development Macs and on linux servers)

 - Python.  (We used 2.5 on development Macs and 2.6 on the linux server) 
 
 - Python libraries: 
     (Installed with pip, as described below.)
     Django==1.1.1
     South==0.6.2
     django-pagination==1.0.5
     psycopg2==2.0.13
     wsgiref==0.1.2
     

Server-side dependencies: 

 - Apache 
 
 - mod_wsgi in Apache 


Installation & development dependencies:
(Strictly speaking, these are only used in the installation guidelines below -- 
there could be other ways to achieve what they do.)

 - setuptools (easy_nstall, pip) (Python) 

 - virtualenv (Python)
 


CONFIGURATION PARAMETERS
========================

$FEEDDB_RDB$   			RDB credentials (url, name, user, password), as used in Django settings.py 
$FEEDDB_PYTHON_SITE$    The site-packages directory in the Python installation.
$FEEDDB_PYTHON_VIRTENV$	The python to be used by Feeding DB. 
						(Only needed if you follow the installation process sketched below. 
						If so, your $FEEDDB_PYTHON_SITE$ will be the one under $FEEDDB_PYTHON_VIRTENV$.)

$FEEDDB_INSTALL$		The directory into which the feeddb package is placed. 
						(This package is the only top-level directory packed in feedingdb-yyymmdd-svnNNNN.tar.gz).
$FEEDDB_WSGI_CONF$		WSGI configuration file that mod_wsgi reads on startup. (Server only)

$FEEDDB_UPLOADS$    	The location on the web server that will host files uploaded by contributors (recordings, illustrations). 
$FEEDDB_TEMP$			The location where CSV metadata files are constructed prior to presenting to users for download.

See in each of the sections below how these metavariables fit into the setups we used in practice at NESCent. 


DEVELOPER INSTALLATION 
======================

(1) Select and create sensible locations for the above pieces.  For example, 

 - Create an empty database $FEED_RDB$ and take note of the credentials (url, name, user, password). 

 - Select a directory, say 'feeding'  and create under it
      feeding/
        projsrc/ 				- use for $FEEDDB_INSTALL$
          feeddb/				- this is the unpacked contents of a feedingdb-yyymmdd-svnNNNN.tar.gz distribution
          feeddb/settings.py    - create by copying feeddb/settings.py.example and filling in values as indicated
        uploads/				- use for $FEEDDB_UPLOADS$
        temp/					- use for $FEEDDB_TEMP$
		virtenv/  				- use for $FEEDDB_PYTHON_VIRTENV$ (read on)
		
	Don't forget to edit settings.py suitably before moving on! 
  

(2) Build Python virtual environment to be used by Feeding DB. 
 	Assuming setup_tools and virtualenv are available, 
 	go to feeding/ and run 
 	     virtualenv --no-site-packages virtenv
 	     
 	Start the environment: 
 	     source  $FEEDDB_PYTHON_VIRTENV$/bin/activate
 	Note: you will also do this every time prior to running Django in development mode. 
 	
 	Install python dependencies (as listed in dependencies.pip) into virtenv
 	  cd feeding/projsrc/feeddb
 	  pip install dependencies.pip

(3) Initialize the database. 

	Initialize Django apps:
    	./manage.py syncdb
    This is the Django command that sets up Admin and other Django apps in the RDB. 
    While running, it will ask to create the administrator user for the app - do that. 	
    
    Initialize Feeding DB structures:   
		./manage.py migrate   
	This is a South command that runs migrations that create tables. 
	The Feeding tables will be empty.
	
(4) Run the web application: 
      	./manage.py runserver    
    Initially, only the administrator created above can log in. 
    Use the application to create users and add data. 


DEPLOYMENT (SERVER) INSTALLATION 
================================

A server deployment must cover all the points described above for the developer installation, 
plus connect the application to mod_wsgi in the Apache server. 

Assume that Apache and mod_wsgi are installed. 

(1) Configure WSGI in the application. 
    That is, create the $FEEDDB_WSGI_CONF$ file. 
    E.g., extend the above directories: 
       feeding/
         wsgi_scripts/
            feeding.wsgi
            
    Put this in feeding.wsgi, after substituting $$ metavariables appropriately: 
---------------------------------------------------------------------------------------------
# overlay application-specific virtualenv on top of the python environment
# supplied by Apache (e.g., via WSGIPythonHome)
import site
site.addsitedir('$FEEDDB_PYTHON_SITE$')

# point to the django application
import os
import sys
sys.path.append('$FEEDDB_INSTALL$')
os.environ['DJANGO_SETTINGS_MODULE'] = 'feeddb.settings'

import django.core.handlers.wsgi
application = django.core.handlers.wsgi.WSGIHandler()
---------------------------------------------------------------------------------------------


(2) Configure WSGI in Apache. 

    E.g., put something like the following either into httpd.conf directly, 
    or into an included file. 
	[Note: In this example, Feeding DB is installed in WSGI Daemon mode, 
	when a file change on $FEEDDB_WSGI_CONF$ triggers application restart. 
	This is useful in a development server, but takes cycles and should be disabled in production. ]

---------------------------------------------------------------------------------------------
<VirtualHost *:80>
ServerName $FEEDDB_SERVER_NAME$       # E.g. feeding.yourdomain.org
ServerAdmin $FEEDDB_EMAIL$
DocumentRoot $FEEDDB_INSTALL$/docroot

<Directory " $FEEDDB_INSTALL$/docroot">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride All 
        Order allow,deny
        Allow from all
</Directory>

<Directory " $FEEDDB_INSTALL$">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride All
        Order allow,deny
        Allow from all
</Directory>

<Directory " $FEEDDB_INSTALL$/wsgi-scripts">
        AllowOverride None
        Order allow,deny
        Allow from all
</Directory>

## The FEED application
WSGIDaemonProcess feeding processes=1 threads=1
WSGIProcessGroup feeding
WSGIScriptAlias / $FEEDDB_INSTALL$/wsgi-scripts/feeding.wsgi

Alias /static $FEEDDB_INSTALL$/feeddb/feed/static

<Directory " /home/www/feeding-dev.nescent.org/feeding/feeddb/feed/static">
        Order allow,deny
        Allow from all
</Directory>

Alias /explorer/static $FEEDDB_INSTALL$/feeddb/explorer/static

<Directory " $FEEDDB_INSTALL$/feeddb/explorer/static">
        Order allow,deny
        Allow from all
</Directory>

Alias /adminstatic  /home/www/feeding-dev.nescent.org/virtualenv/feeding/lib/python2.6/site-packages/django/contrib/admin/media

<Directory " $FEEDDB_PYTHON_SITE$/django/contrib/admin/media">
        Order allow,deny
        Allow from all
</Directory>

Alias /uploads  /home/www/feeding-dev.nescent.org/feeding/feeddb_uploads

<Directory "$FEEDDB_UPLOADS$">
        # Since Apache will write files into here, make sure _www user (orgroup)
        # has write rights.
        Order allow,deny
        Allow from all
</Directory>

</VirtualHost>
---------------------------------------------------------------------------------------------
         


